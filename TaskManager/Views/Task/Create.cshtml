@model TaskManager.Models.TasksModel
@{
    ViewBag.Title = "Add Task";
    var isEdit = (Model != null && Model.Id > 0);
}

@section breadcrumb
{
    <li>@Html.ActionLink("Task Manager", "Index", "Task")</li>
    @if (isEdit)
    {
        <li>@Html.ActionLink("Edit Task", "Edit", "Task")</li>
    }
    else
    {
        <li>@Html.ActionLink("Add Task", "Create", "Task")</li>
    }
}

<div class="box box-primary">
    <div class="box-header">
        @if (isEdit)
        {
            <h3 class="box-title">Edit Task</h3>
        }
        else
        {
            <h3 class="box-title">Add Task</h3>              
        }
    </div>
    <!-- /.box-header -->
    <!-- form start -->

    @using (Html.BeginForm(isEdit ? "Edit" : "Create"))
    {
        @Html.AntiForgeryToken()
        <div class="box-body">
            <div class="form-group padding-10">
                    @Html.LabelFor(m => m.ProjectId)
                    @Html.DropDownListFor(m => m.ProjectId, new SelectList(ViewBag.Projects, "Id", "Name"), new { @class = "form-control" })
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    @Html.HiddenFor(m => m.Id)
                    @Html.HiddenFor(m => m.DocumentIds)
                    @Html.LabelFor(m => m.Name)

                    @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Leader)
                    @Html.DropDownListFor(m => m.Leader, new SelectList(ViewBag.Departments, "Id", "Name"), new { @class = "form-control" })
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-6">
                    @Html.LabelFor(m => m.Priority)
                    @Html.DropDownListFor(m => m.Leader, new SelectList(ViewBag.Priorities, "Value", "Name"), new { @class = "form-control" })
                </div>
                <div class="col-md-6">
                    @Html.LabelFor(m => m.StartAndEndDate)
                    <div class="input-group">
                        <div class="input-group-addon">
                            <i class="fa fa-calendar"></i>
                        </div>
                        @Html.TextBoxFor(m => m.StartAndEndDate, new { @class = "form-control pull-right" })
                    </div><!-- /.input group -->
                    
                </div>
            </div>
            <div class="form-group padding-10">
                @Html.LabelFor(m => m.Description)
                @Html.TextAreaFor(m => m.Description, new { @class = "form-control", rows = "5" })
            </div>
            @*<div class="form-group padding-10">
                @Html.LabelFor(m => m.DocumentIds)
                @Html.HiddenFor(m => m.DocumentIds, new { @class = "form-control" })
            </div>*@
            @Html.ValidationSummary(true)
        </div>
        <div class="clear"></div>
        <!-- /.box-body -->
        <div class="box-footer">
            <button type="submit" class="btn btn-primary">Save</button>
            <a href="@Url.Action("Index")" class="btn btn-primary">Cancel</a>
        </div>
    }
</div>
@section Script
{
    <script type="text/javascript">
        $(function () {
            //Datetime mask
            $('#StartAndEndDate').daterangepicker({ format: 'MM/DD/YYYY' });
        });
    </script>
}

 